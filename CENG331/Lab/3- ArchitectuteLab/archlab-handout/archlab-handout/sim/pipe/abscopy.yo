                            | #/* $begin abscopy-ys */
                            | ##################################################################
                            | # abscopy.ys - copy the absolute values of a src block of n words to dst.
                            | # Return the sum of copied (absolute) values.
                            | #
                            | # Include your name and ID here.
                            | # Gürhan İlhan Adıgüzel 2448025
                            | 
                            | # Describe how and why you modified the baseline code.
                            | 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = n
0x000:                      | abscopy:
                            | ##################################################################
                            | # You can modify this portion
                            |         # Loop header
0x000: 6300                 |         xorq    %rax,%rax                       # sum = 0;
0x002:                      | Loop:
0x002: 6222                 |         andq    %rdx, %rdx                      # check %rdx
0x004: 71fb02000000000000   |         jle     Done
0x00d: 2021                 |         rrmovq  %rdx, %rcx
0x00f: d0f1f7ffffffffffffff | 	isubq   $-9, %rcx	
0x019: 726301000000000000   |         jl      W0
                            |                                                 # Read 9 values at a time	
0x022: 50870000000000000000 |         mrmovq  (%rdi), %r8	                # Read src
0x02c: 50970800000000000000 |         mrmovq  8(%rdi), %r9	                # Read src + 1
0x036: 50a71000000000000000 |         mrmovq  16(%rdi), %r10		        # Read src + 2
0x040: 50b71800000000000000 |         mrmovq  24(%rdi), %r11		        # Read src + 3
0x04a: 50c72000000000000000 |         mrmovq  32(%rdi), %r12		        # Read src + 4
0x054: 50d72800000000000000 |         mrmovq  40(%rdi), %r13		        # Read src + 5
0x05e: 50e73000000000000000 |         mrmovq  48(%rdi), %r14		        # Read src + 6
0x068: 50373800000000000000 |         mrmovq  56(%rdi), %rbx		        # Read src + 7
0x072: 50574000000000000000 |         mrmovq  64(%rdi), %rbp		        # Read src + 8
                            |         
0x07c:                      | Write:          
0x07c: d0f80000000000000000 |         isubq   $0, %r8                         # take absolute %r8
0x086: 6080                 |         addq    %r8, %rax	                # sum += %r8                       
0x088: 40860000000000000000 |         rmmovq  %r8, (%rsi)			# Write src to dst    
                            | 
0x092:                      | Write1:
0x092: d0f90000000000000000 |         isubq   $0, %r9                         # take absolute %r9
0x09c: 6090                 |         addq    %r9, %rax		        # sum += r9              
0x09e: 40960800000000000000 |         rmmovq  %r9, 8(%rsi)			# Write src + 1 to dst + 1
                            | 
0x0a8:                      | Write2:
0x0a8: d0fa0000000000000000 |         isubq   $0, %r10                        # take absolute %r10
0x0b2: 60a0                 |         addq    %r10, %rax			# sum += r10               
0x0b4: 40a61000000000000000 |         rmmovq  %r10, 16(%rsi)		        # Write src + 2 to dst + 2
                            | 
0x0be:                      | Write3:
0x0be: d0fb0000000000000000 |         isubq   $0, %r11                        # take absolute %r11
0x0c8: 60b0                 |         addq    %r11, %rax			# sum += r11                
0x0ca: 40b61800000000000000 |         rmmovq  %r11, 24(%rsi)		        # Write src + 3 to dst + 3
                            | 
0x0d4:                      | Write4:
0x0d4: d0fc0000000000000000 |         isubq   $0, %r12                        # take absolute %r12
0x0de: 60c0                 |         addq    %r12, %rax			# sum += r12               
0x0e0: 40c62000000000000000 |         rmmovq  %r12, 32(%rsi)		        # Write src + 4 to dst + 4
                            | 
0x0ea:                      | Write5:
0x0ea: d0fd0000000000000000 |         isubq   $0, %r13                        # take absolute %r13
0x0f4: 60d0                 |         addq    %r13, %rax			# sum += r13                
0x0f6: 40d62800000000000000 |         rmmovq  %r13, 40(%rsi)		        # Write src + 5 to dst + 5
                            | 
0x100:                      | Write6:
0x100: d0fe0000000000000000 |         isubq   $0, %r14                        # take absolute %r14
0x10a: 60e0                 |         addq    %r14, %rax			# sum += r14                
0x10c: 40e63000000000000000 |         rmmovq  %r14, 48(%rsi)		        # Write src + 6 to dst + 6  
                            | 
0x116:                      | Write7:
0x116: d0f30000000000000000 |         isubq   $0, %rbx                        # take absolute %rbx
0x120: 6030                 |         addq    %rbx, %rax			# sum += rbx               
0x122: 40363800000000000000 |         rmmovq  %rbx, 56(%rsi)		        # Write src + 7 to dst + 7   
                            | 
0x12c:                      | Write8:
0x12c: d0f50000000000000000 |         isubq   $0, %rbp                        # take absolute %rbp
0x136: 6050                 |         addq    %rbp, %rax			# sum += rbp                
0x138: 40564000000000000000 |         rmmovq  %rbp, 64(%rsi)		        # Write src + 8 to dst + 8
                            | 
0x142:                      | Write9:
0x142: d0f2f7ffffffffffffff |         isubq   $-9, %rdx                       # decrease %rdx by 9 
0x14c: 30f14800000000000000 |         irmovq  $72, %rcx                       
0x156: 6017                 |         addq    %rcx, %rdi			# Increase src pointer by 72
0x158: 6016                 | 	addq    %rcx, %rsi			# Increase dst pointer by 72
0x15a: 700200000000000000   | 	jmp     Loop				# Jump to start of the loop
                            | 
0x163:                      | W0:        
0x163: 50870000000000000000 |         mrmovq  (%rdi), %r8	                # Read src
0x16d: d0f80000000000000000 |         isubq   $0, %r8                         # take absolute %r8
0x177: 6080                 |         addq    %r8, %rax			# sum += %r8
0x179: 40860000000000000000 |         rmmovq  %r8, (%rsi)			# Write src to dst                
0x183: d0f2ffffffffffffffff |         isubq   $-1, %rdx	
0x18d: 71fb02000000000000   |         jle     Done
                            | 
0x196:                      | W1:       
0x196: 50970800000000000000 |         mrmovq  8(%rdi), %r9	                # Read src + 1
0x1a0: d0f90000000000000000 |         isubq   $0, %r9                         # take absolute %r9
0x1aa: 6090                 |         addq    %r9, %rax			# sum += %r9
0x1ac: 40960800000000000000 |         rmmovq  %r9, 8(%rsi)			# Write src + 1 to dst + 1             
0x1b6: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x1c0: 71fb02000000000000   |         jle     Done
                            | 
0x1c9:                      | W2:        
0x1c9: 50a71000000000000000 |         mrmovq  16(%rdi), %r10	                # Read src + 2 
0x1d3: d0fa0000000000000000 |         isubq   $0, %r10                        # take absolute %r10
0x1dd: 60a0                 |         addq    %r10, %rax			# sum += %r10
0x1df: 40a61000000000000000 |         rmmovq  %r10, 16(%rsi)		        # Write src + 2 to dst + 2                
0x1e9: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x1f3: 71fb02000000000000   |         jle     Done
                            | 
0x1fc:                      | W3:        
0x1fc: 50b71800000000000000 |         mrmovq  24(%rdi), %r11	                # Read src + 3
0x206: d0fb0000000000000000 |         isubq   $0, %r11                        # take absolute %r11
0x210: 60b0                 |         addq    %r11, %rax			# sum += %r11
0x212: 40b61800000000000000 |         rmmovq  %r11, 24(%rsi)			# Write src + 3 to dst + 3               
0x21c: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x226: 71fb02000000000000   |         jle     Done
                            | 
0x22f:                      | W4:        
0x22f: 50c72000000000000000 |         mrmovq  32(%rdi), %r12	                # Read src + 4
0x239: d0fc0000000000000000 |         isubq   $0, %r12                        # take absolute %r12
0x243: 60c0                 |         addq    %r12, %rax			# sum += %r12
0x245: 40c62000000000000000 |         rmmovq  %r12, 32(%rsi)			# Write src + 4 to dst + 4                
0x24f: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x259: 71fb02000000000000   |         jle     Done
                            | 
0x262:                      | W5:        
0x262: 50d72800000000000000 |         mrmovq  40(%rdi), %r13	                # Read src + 5
0x26c: d0fd0000000000000000 |         isubq   $0, %r13                        # take absolute %r13
0x276: 60d0                 |         addq    %r13, %rax			# sum += %r13
0x278: 40d62800000000000000 |         rmmovq  %r13, 40(%rsi)			# Write src + 5 to dst + 5                
0x282: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x28c: 71fb02000000000000   |         jle     Done
                            | 
0x295:                      | W6:        
0x295: 50e73000000000000000 |         mrmovq  48(%rdi), %r14	                # Read src + 6
0x29f: d0fe0000000000000000 |         isubq   $0, %r14                        # take absolute %r14
0x2a9: 60e0                 |         addq    %r14, %rax			# sum += %r14
0x2ab: 40e63000000000000000 |         rmmovq  %r14, 48(%rsi)			# Write src + 6 to dst + 6                
0x2b5: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x2bf: 71fb02000000000000   |         jle     Done
                            | 
0x2c8:                      | W7:        
0x2c8: 50373800000000000000 |         mrmovq  56(%rdi), %rbx	                # Read src + 7
0x2d2: d0f30000000000000000 |         isubq   $0, %rbx                        # take absolute %rbx
0x2dc: 6030                 |         addq    %rbx, %rax		        # sum += %rbx
0x2de: 40363800000000000000 |         rmmovq  %rbx, 56(%rsi)			# Write src + 7 to dst + 7                
0x2e8: d0f2ffffffffffffffff | 	isubq   $-1, %rdx	                # decrease %rdx by 1 
0x2f2: 71fb02000000000000   |         jle     Done
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x2fb:                      | Done:
0x2fb: 90                   |         ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x2fc:                      | End:
                            | #/* $end abscopy-ys */
