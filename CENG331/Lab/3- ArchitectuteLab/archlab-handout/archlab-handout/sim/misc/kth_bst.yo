0x000:                      | .pos 0   
0x000: 30f40004000000000000 |     irmovq stack, %rsp      # Set up stack pointer
0x00a: 801400000000000000   |     call main               # Execute main program
0x013: 00                   |     halt                    # Terminate program
                            | 
0x014:                      | main:   
0x014: 30f70002000000000000 |     irmovq root, %rdi
0x01e: 30f60803000000000000 |     irmovq k, %rsi
0x028: 803200000000000000   |     call func
0x031: 90                   |     ret
                            | 
                            | # long kth_bst(struct Node* root, long *k)
                            | # root in %rdi, k in %rsi
0x032:                      | func:   
0x032: 30f80000000000000000 |     irmovq  $0,%r8      # Constant 0
0x03c: 30f90100000000000000 |     irmovq  $1,%r9      # Constant 1
0x046: 30fa0800000000000000 |     irmovq  $8, %r10    # Constant 8
0x050: 30f0ffffffffffffffff |     irmovq  $-1,%rax    # rax = -1
0x05a: a0bf                 |     pushq   %r11
0x05c: 207b                 |     rrmovq  %rdi, %r11
0x05e: 6277                 | 	andq    %rdi,%rdi	# Set CC
0x060: 746c00000000000000   |     jne     if          # Stop when 0
0x069: b0bf                 |     popq    %r11
0x06b: 90                   |     ret
                            | 
0x06c:                      | if:     
0x06c: 60a7                 |     addq    %r10, %rdi      
0x06e: 50770000000000000000 |     mrmovq  (%rdi), %rdi    # root = root->left
0x078: 803200000000000000   |     call    func            # kth_bst(root->left, k);
0x081: 20b7                 |     rrmovq  %r11, %rdi
0x083: 50c60000000000000000 |     mrmovq  (%rsi), %r12    # r12 = *k
0x08d: 618c                 |     subq    %r8, %r12       # k <= 0
0x08f: 71c900000000000000   |     jle     else
0x098: 619c                 |     subq    %r9, %r12       # if (*k == 0)
0x09a: 73cc00000000000000   |     je      done
0x0a3: 40c60000000000000000 |     rmmovq  %r12, (%rsi)    # rsi = *k--
0x0ad: 60a7                 |     addq    %r10,%rdi       
0x0af: 60a7                 |     addq    %r10,%rdi       
0x0b1: 50770000000000000000 |     mrmovq  (%rdi), %rdi    # root = root->right
0x0bb: 803200000000000000   |     call    func            # kth_bst(root->right, k);
0x0c4: 20b7                 |     rrmovq  %r11, %rdi
0x0c6: b0bf                 |     popq    %r11
0x0c8: 90                   |     ret
                            |         
0x0c9:                      | else:   
0x0c9: b0bf                 |     popq    %r11
0x0cb: 90                   |     ret
                            | 
0x0cc:                      | done:   
0x0cc: 40c60000000000000000 |     rmmovq  %r12, (%rsi)
0x0d6: 50070000000000000000 |     mrmovq  (%rdi), %rax    #return root->data;
0x0e0: b0bf                 |     popq    %r11
0x0e2: 90                   |     ret       
                            | 
                            | # Absolutely positioned here to debug addresses more easily.
0x200:                      | .pos 0x200
0x200:                      | root:
0x200: 1100000000000000     |     .quad 17
0x208: 1802000000000000     |     .quad node6
0x210: a802000000000000     |     .quad node24
0x218:                      | node6:
0x218: 0600000000000000     |     .quad 6
0x220: 3002000000000000     |     .quad node4
0x228: 7802000000000000     |     .quad node11
0x230:                      | node4:
0x230: 0400000000000000     |     .quad 4
0x238: 4802000000000000     |     .quad node3
0x240: 6002000000000000     |     .quad node5
0x248:                      | node3:
0x248: 0300000000000000     |     .quad 3
0x250: 0000000000000000     |     .quad 0
0x258: 0000000000000000     |     .quad 0
0x260:                      | node5:
0x260: 0500000000000000     |     .quad 5
0x268: 0000000000000000     |     .quad 0 
0x270: 0000000000000000     |     .quad 0
0x278:                      | node11:
0x278: 0b00000000000000     |     .quad 11
0x280: 9002000000000000     |     .quad node8
0x288: 0000000000000000     |     .quad 0
0x290:                      | node8:
0x290: 0800000000000000     |     .quad 8
0x298: 0000000000000000     |     .quad 0
0x2a0: 0000000000000000     |     .quad 0
0x2a8:                      | node24:
0x2a8: 1800000000000000     |     .quad 24
0x2b0: c002000000000000     |     .quad node19
0x2b8: d802000000000000     |     .quad node40
0x2c0:                      | node19:
0x2c0: 1300000000000000     |     .quad 19
0x2c8: 0000000000000000     |     .quad 0
0x2d0: 0000000000000000     |     .quad 0
0x2d8:                      | node40:
0x2d8: 2800000000000000     |     .quad 40
0x2e0: 0000000000000000     |     .quad 0
0x2e8: f002000000000000     |     .quad node52
0x2f0:                      | node52:
0x2f0: 3400000000000000     |     .quad 52
0x2f8: 0000000000000000     |     .quad 0
0x300: 0000000000000000     |     .quad 0
0x308:                      | k:
0x308: 0800000000000000     |     .quad 8
                            | 
0x400:                      | .pos 0x400
0x400:                      | stack:  
